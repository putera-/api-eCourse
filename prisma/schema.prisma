// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Client {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(100)
  users     User[]
  blogs     Blog[]
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model User {
  id        String   @id @default(uuid())
  email     String   @db.VarChar(100)
  name      String   @db.VarChar(100)
  password  String   @db.VarChar(100)
  auth      Auth[]
  Client    Client?  @relation(fields: [clientId], references: [id])
  clientId  String?
  blogs     Blog[]
  role      UserRole @default(MEMBER)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum UserRole {
  SUPERADMIN
  CLIENT
  MEMBER
}

model Auth {
  id        String   @id @default(uuid())
  User      User     @relation(fields: [userId], references: [id])
  userId    String
  token     String   @db.VarChar(200)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Blog {
  id        String   @id @default(uuid())
  title     String   @db.VarChar(100)
  content   String   @db.Text
  Client    Client   @relation(fields: [clientId], references: [id])
  clientId  String
  User      User     @relation(fields: [userId], references: [id])
  userId    String
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("blog")
}
